import{L as u}from"./Layout-Ds3QvfcV.js";import{P as h}from"./pagination-B0tE2wTz.js";import{T as P}from"./tableau-nIdjVny8.js";import{p as _}from"./patienteService-aoQ1PbEG.js";import{_ as p}from"./_plugin-vue_export-helper-Cm6_9V8g.js";import{e as f,f as b,h as o,o as i,c as r,a as D,g as c}from"./index-C-f7vtLL.js";const y="view",A={components:{Layout:u,Pagination:h,Table:P},data(){return{columns:[{label:"Nom",field:"nom"},{label:"Prénom",field:"prenom"},{label:"Téléphone",field:"telephone"},{label:"Âge",field:"age"},{label:"Lieu de Naissance",field:"lieu_de_naissance"},{label:"Profession",field:"profession"},{label:"Type",field:"type"},{label:"Actions",field:"action",type:"action"}],allData:[],paginatedData:[],currentPage:1,totalItems:0,itemsPerPage:10}},mounted(){this.getPatients()},methods:{async getPatients(){try{const t=await _.getPatientes();console.log(t.Liste_des_patientes),t&&t.Liste_des_patientes&&Array.isArray(t.Liste_des_patientes)&&(this.allData=t.Liste_des_patientes.map(e=>({id:e.id,nom:e.user.nom,prenom:e.user.prenom,telephone:e.user.telephone,adresse:e.user.adresse,email:e.user.email,age:this.calculateAge(e.date_de_naissance),lieu_de_naissance:e.lieu_de_naissance,profession:e.profession,type:e.type,date_de_naissance:e.date_de_naissance})),this.totalItems=this.allData.length,this.getPatientsPaginated())}catch(t){console.error("Erreur lors de la récupération des patientes :",t)}},handleTableAction({action:t,row:e}){switch(t){case y:this.$router.push({name:"detailPatiente-badiene",params:{id:e.id}});break;case ACTION_EDIT:break;case ACTION_DELETE:break}},getPatientsPaginated(){if(this.allData.length>0){const t=(this.currentPage-1)*this.itemsPerPage,e=t+this.itemsPerPage;this.paginatedData=this.allData.slice(t,e)}},handlePageChange(t){this.currentPage=t,this.getPatientsPaginated()},calculateAge(t){const e=new Date,s=new Date(t);let n=e.getFullYear()-s.getFullYear();const a=e.getMonth()-s.getMonth();return(a<0||a===0&&e.getDate()<s.getDate())&&n--,n}}},T={key:0},I={key:1,class:"tableau"};function L(t,e,s,n,a,l){const d=o("Table"),g=o("Pagination"),m=o("Layout");return i(),f(m,null,{default:b(()=>[a.allData.length===0?(i(),r("div",T,e[0]||(e[0]=[D("p",null,"Aucune Patiente trouvée.",-1)]))):(i(),r("div",I,[c(d,{columns:a.columns,data:a.paginatedData,title:"Liste des Patientes",onAction:l.handleTableAction},null,8,["columns","data","onAction"]),c(g,{currentPage:a.currentPage,totalItems:a.totalItems,itemsPerPage:a.itemsPerPage,onPageChanged:l.handlePageChange},null,8,["currentPage","totalItems","itemsPerPage","onPageChanged"])]))]),_:1})}const x=p(A,[["render",L]]);export{x as default};
